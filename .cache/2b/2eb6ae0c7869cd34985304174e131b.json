{"id":"node_modules/us-inflation/index.js","dependencies":[{"name":"/Users/kmatsuo/Downloads/parcel-sandbox/package.json","includedInParent":true,"mtime":1583867178575},{"name":"/Users/kmatsuo/Downloads/parcel-sandbox/node_modules/us-inflation/package.json","includedInParent":true,"mtime":1583867146742},{"name":"./bls-cpi-data.json","loc":{"line":1,"column":21},"parent":"/Users/kmatsuo/Downloads/parcel-sandbox/node_modules/us-inflation/index.js","resolved":"/Users/kmatsuo/Downloads/parcel-sandbox/node_modules/us-inflation/bls-cpi-data.json"}],"generated":{"js":"const data = require(\"./bls-cpi-data.json\")\n\nconst lastFullYear = 2017\nconst months = [\n  { abbr: \"Jan\", name: \"January\", order: 1 },\n  { abbr: \"Feb\", name: \"February\", order: 2 },\n  { abbr: \"Mar\", name: \"March\", order: 3 },\n  { abbr: \"Apr\", name: \"April\", order: 4 },\n  { abbr: \"May\", name: \"May\", order: 5 },\n  { abbr: \"Jun\", name: \"June\", order: 6 },\n  { abbr: \"Jul\", name: \"July\", order: 7 },\n  { abbr: \"Aug\", name: \"August\", order: 8 },\n  { abbr: \"Sep\", name: \"September\", order: 9 },\n  { abbr: \"Oct\", name: \"October\", order: 10 },\n  { abbr: \"Nov\", name: \"November\", order: 11 },\n  { abbr: \"Dec\", name: \"December\", order: 12 }\n]\n\nfunction getCpi(year, initialMonth) {\n  const month = initialMonth\n    ? months.find(m => m.order === initialMonth).abbr\n    : \"Annual\"\n  const yearData = data.find(d => d.Year === year)\n  return yearData[month]\n}\n\nmodule.exports = function inflation(initialFrom, initialTo) {\n  const from = initialFrom || {}\n  const to = initialTo || { year: lastFullYear }\n  if (!from.year) {\n    throw new Error(\"from.year must be provided\")\n  } else if (!from.amount) {\n    throw new Error(\"from.amount must be provided\")\n  } else if (typeof from.year !== \"number\") {\n    throw new Error(\"from.year must be a number, like 1922\")\n  } else if (from.year < 1913) {\n    throw new Error(\"from.year must be 1913 or later\")\n  }\n\n  const fromCpi = getCpi(from.year, from.month)\n  const toCpi = getCpi(to.year, to.month)\n\n  const inflationFactor = (toCpi - fromCpi) / fromCpi\n  const inflationValue = inflationFactor * from.amount\n  const currentValue = inflationValue + from.amount\n\n  return +currentValue.toFixed(2)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/us-inflation/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/us-inflation/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}}],"sources":{"node_modules/us-inflation/index.js":"const data = require(\"./bls-cpi-data.json\")\n\nconst lastFullYear = 2017\nconst months = [\n  { abbr: \"Jan\", name: \"January\", order: 1 },\n  { abbr: \"Feb\", name: \"February\", order: 2 },\n  { abbr: \"Mar\", name: \"March\", order: 3 },\n  { abbr: \"Apr\", name: \"April\", order: 4 },\n  { abbr: \"May\", name: \"May\", order: 5 },\n  { abbr: \"Jun\", name: \"June\", order: 6 },\n  { abbr: \"Jul\", name: \"July\", order: 7 },\n  { abbr: \"Aug\", name: \"August\", order: 8 },\n  { abbr: \"Sep\", name: \"September\", order: 9 },\n  { abbr: \"Oct\", name: \"October\", order: 10 },\n  { abbr: \"Nov\", name: \"November\", order: 11 },\n  { abbr: \"Dec\", name: \"December\", order: 12 }\n]\n\nfunction getCpi(year, initialMonth) {\n  const month = initialMonth\n    ? months.find(m => m.order === initialMonth).abbr\n    : \"Annual\"\n  const yearData = data.find(d => d.Year === year)\n  return yearData[month]\n}\n\nmodule.exports = function inflation(initialFrom, initialTo) {\n  const from = initialFrom || {}\n  const to = initialTo || { year: lastFullYear }\n  if (!from.year) {\n    throw new Error(\"from.year must be provided\")\n  } else if (!from.amount) {\n    throw new Error(\"from.amount must be provided\")\n  } else if (typeof from.year !== \"number\") {\n    throw new Error(\"from.year must be a number, like 1922\")\n  } else if (from.year < 1913) {\n    throw new Error(\"from.year must be 1913 or later\")\n  }\n\n  const fromCpi = getCpi(from.year, from.month)\n  const toCpi = getCpi(to.year, to.month)\n\n  const inflationFactor = (toCpi - fromCpi) / fromCpi\n  const inflationValue = inflationFactor * from.amount\n  const currentValue = inflationValue + from.amount\n\n  return +currentValue.toFixed(2)\n}\n"},"lineCount":49}},"error":null,"hash":"711df1cfd0cda1b1b2e091a971da188d","cacheData":{"env":{}}}